name: Run tests and delivery workflow
on:
  schedule:
    - cron: '0 8 * * *' # Run at 8AM UTC.
  push:
    branches:
      - '2.x'
      - '2.x-**'
    tags:
      - '2.*'
  pull_request:
    branches:
      - '2.x'

jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set default FARMOS_REPO and FARMOS_VERSION.
        run: |
          echo "FARMOS_REPO=${GITHUB_REPOSITORY}" >> $GITHUB_ENV
          echo "FARMOS_VERSION=2.x" >> $GITHUB_ENV
      - name: Set FARMOS_VERSION for branch push event.
        if: github.event_name == 'push' && github.ref_type == 'branch'
        run: echo "FARMOS_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Set FARMOS_VERSION for tag push event.
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: echo "FARMOS_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
      - name: Set FARMOS_VERSION and FARMOS_REPO for pull request event.
        if: github.event_name == 'pull_request'
        run: |
          echo "FARMOS_VERSION=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          echo "FARMOS_REPO=${{ github.event.pull_request.head.repo.full_name }}" >> $GITHUB_ENV
      - name: Build and save farmOS 2.x Docker image
        run: |
          docker build --build-arg FARMOS_REPO=https://github.com/${FARMOS_REPO} --build-arg FARMOS_VERSION=${FARMOS_VERSION} -t farmos/farmos:2.x docker
          docker save farmos/farmos:2.x > /tmp/farmos-2x.tar
      - name: Cache farmOS 2.x Docker image
        uses: actions/cache@v3
        with:
          path: /tmp/farmos-2x.tar
          key: farmos-2x-${{ github.run_id }}
      # This builds the dev Docker image using the specified FARMOS_VERSION,
      # but notably it does NOT override the default PROJECT_VERSION, so the
      # farmOS Composer project 2.x branch is always used.
      - name: Build and save farmOS 2.x-dev Docker image
        run: |
          docker build --build-arg FARMOS_REPO=https://github.com/${FARMOS_REPO} --build-arg FARMOS_VERSION=${FARMOS_VERSION} -t farmos/farmos:2.x-dev docker/dev
          docker save farmos/farmos:2.x-dev > /tmp/farmos-2x-dev.tar
      - name: Cache farmOS 2.x-dev Docker image
        uses: actions/cache@v3
        with:
          path: /tmp/farmos-2x-dev.tar
          key: farmos-2x-dev-${{ github.run_id }}
    outputs:
      farmos_version: ${{ env.FARMOS_VERSION }}
  sniff:
    name: Run PHP Codesniffer
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Restore farmOS 2.x-dev Docker image from cache
        uses: actions/cache@v3
        with:
          path: /tmp/farmos-2x-dev.tar
          key: farmos-2x-dev-${{ github.run_id }}
      - name: Load farmos/farmos:2.x-dev image
        run: docker load < /tmp/farmos-2x-dev.tar
      - name: Run PHP CodeSniffer
        run: docker run farmos/farmos:2.x-dev phpcs /opt/drupal/web/profiles/farm
  test:
    name: Run PHPUnit tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        dbms:
         - pgsql
         - mariadb
         - sqlite
        include:
          - dbms: pgsql
            DB_URL: pgsql://farm:farm@db/farm
            processes: auto
          - dbms: mariadb
            DB_URL: mysql://farm:farm@db/farm
            processes: auto
          - dbms: sqlite
            DB_URL: sqlite://localhost/sites/default/files/db.sqlite
            processes: 1
    steps:
      - name: Print test matrix variables
        run: echo "matrix.dbms=${{ matrix.dbms }}, matrix.DB_URL=${{ matrix.DB_URL }}"
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Restore farmOS 2.x-dev Docker image from cache
        uses: actions/cache@v3
        with:
          path: /tmp/farmos-2x-dev.tar
          key: farmos-2x-dev-${{ github.run_id }}
      - name: Load farmos/farmos:2.x-dev image
        run: docker load < /tmp/farmos-2x-dev.tar
      # Build a new docker-compose.yml file from docker-compose.testing.common + docker-compose.testing.{dbms}.yml.
      # Copy to the current directory so that farmOS volume mounts don't change to the docker/www folder.
      - name: Create docker-compose.yml
        env:
          DB_URL: ${{ matrix.DB_URL }}
        run: |
          cp docker/docker-compose.testing.* .
          docker-compose -f docker-compose.testing.common.yml -f docker-compose.testing.${{ matrix.dbms }}.yml config > docker-compose.yml
      - name: Start containers
        run: docker-compose up -d
      - name: Wait until www container is ready
      # The www-container-fs-ready file is only created once we expect the containers to be online
      # so waiting for that lets us know it is safe to start the tests
        run: until [ -f ./www/www-container-fs-ready ]; do sleep 0.1; done
      - name: Run PHPUnit tests
        run: docker-compose exec -u www-data -T www paratest --verbose=1 --processes=${{ matrix.processes }} /opt/drupal/web/profiles/farm
      - name: Test Drush site install with all modules
        run: docker-compose exec -u www-data -T www drush site-install --db-url=${{ matrix.DB_URL }} farm farm.modules='all'
  release:
    name: Create GitHub release
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs:
      - build
      - sniff
      - test
    steps:
      - name: Set FARMOS_VERSION from previous output.
        run: echo "FARMOS_VERSION=${{ needs.build.outputs.farmos_version }}" >> $GITHUB_ENV
      - name: Restore farmOS 2.x Docker image from cache
        uses: actions/cache@v3
        with:
          path: /tmp/farmos-2x.tar
          key: farmos-2x-${{ github.run_id }}
      - name: Load farmos/farmos:2.x image
        run: docker load < /tmp/farmos-2x.tar
      - name: Run farmOS Docker container
        run: docker run --rm -v /tmp/farmOS:/opt/drupal farmos/farmos:2.x true
      - name: Create artifact
        run: cd /tmp && tar -czf farmOS-${FARMOS_VERSION}.tar.gz farmOS
      - name: Create GitHub release
        uses: softprops/action-gh-release@6034af24fba4e5a8e975aaa6056554efe4c794d0 #0.1.13
        with:
          body: |
            For full release notes, see [CHANGELOG.md](https://github.com/farmOS/farmOS/blob/${{ env.FARMOS_VERSION }}/CHANGELOG.md).
          files: /tmp/farmOS-${{ env.FARMOS_VERSION }}.tar.gz
          draft: false
          prerelease: false
